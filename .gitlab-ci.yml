image: php:7.2

stages:
  - build
  - test

.maria_10_1: &maria_10_1
  services:
    - mariadb:10.1

.maria_10_2: &maria_10_2
  services:
    - mariadb:10.2

.maria_10_3: &maria_10_3
  services:
    - mariadb:10.3

.shared_script: &shared_script
  script:
  <<: *composer
  <<: *update_db
  <<: *install_db
  <<: *unit_tests
  <<: *db_tests
  <<: *functional_tests
  <<: *web_tests

lint:
  stage: test
  script: vendor/bin/parallel-lint  --exclude files --exclude plugins --exclude vendor --exclude tools/vendor .

cs:
  stage: test
  script:
  - vendor/bin/phpcs -d memory_limit=512M -p --standard=vendor/glpi-project/coding-standard/GlpiStandard/ --ignore=/vendor/,/plugins/,/files/,/lib/,/config/,/tests/config,/css/tiny_mce,/.git ./

security-checker:
  stage: test
  script:
  - vendor/bin/security-checker security:check

test:5.6:
  image: php:5.6
  <<: *maria_10_1
  stage: test
  <<: *shared_script

test:7.0:
  image: php:7.0
  <<: *maria_10_2
  stage: test
  <<: *shared_script

test:7.1:
  image: php:7.1
  <<: *maria_10_3
  stage: test
  <<: *shared_script

test:7.2:
  image: php:7.2
  <<: *maria_10_3
  stage: test
  <<: *shared_script

test:latest:
  image: php:latest
  <<: *maria_10_3
  services:
  - mariadb:10.3
  stage: test
  allow_failure: true
  <<: *shared_script


.bash_functions: &bash_function |
  function composer() {
    # composer
    composer self-update
    sed -e '/"php":/d' -i composer.json
    rm -f composer.lock
    composer install --optimize-autoloader
  }

  function update_db() {
    #update_db:
    mysql -h 127.0.0.1 -u root -e 'create database glpitest0723;'
    mysql -h 127.0.0.1 -u root glpitest0723 < tests/glpi-0.72.3-empty.sql
    cp tests/circleci.config_db.php tests/config_db.php
    php scripts/cliupdate.php --config-dir=../tests --dev --tests
    php scripts/cliupdate.php --config-dir=../tests --dev --tests |grep -q "No migration needed." || (echo "scripts/cliupdate.php FAILED" && exit 1)
    php scripts/innodb_migration.php --config-dir=../tests
    rm tests/config_db.php
  }

  function install_db() {
    # install_db
    php scripts/cliinstall.php --db=glpitest --host=127.0.0.1 --user=root --tests
    php scripts/cliupdate.php --config-dir=../tests --tests |grep -q "No migration needed." || (echo "scripts/cliupdate.php FAILED" && exit 1)
  }

  function unit_tests() {
    # unit_tests
    php vendor/bin/atoum -p 'php -d memory_limit=512M' --debug --force-terminal --use-dot-report --configurations tests/telemetry.php --bootstrap-file tests/bootstrap.php --no-code-coverage -d tests/units
  }

  function db_tests() {
    # db_tests
    php vendor/bin/atoum -p 'php -d memory_limit=512M' --debug --force-terminal --use-dot-report --configurations tests/telemetry.php --bootstrap-file tests/bootstrap.php --no-code-coverage --max-children-number 1 -d tests/database
  }

  function functional_tests() {
    # functional_tests
    php vendor/bin/atoum -p 'php -d memory_limit=512M' --debug --force-terminal --use-dot-report --configurations tests/telemetry.php --bootstrap-file tests/bootstrap.php --no-code-coverage --max-children-number 1 -d tests/functionnal
  }

  function web_tests() {
    # web_tests
    php -S localhost:8088 tests/router.php &>/dev/null &
    php vendor/bin/atoum -p 'php -d memory_limit=512M' --debug --force-terminal --use-dot-report --configurations tests/telemetry.php --bootstrap-file tests/bootstrap.php --no-code-coverage --max-children-number 1 -d tests/web
  }

before_script:
  # Install dependencies
  - docker-php-ext-install mysqli gd xmlrpc
  - pecl install apcu <<< '' || pecl install apcu-4.0.11 <<< ''
  - docker-php-ext-enable apcu
  - echo "apc.enable=1" | sudo tee --append /usr/local/etc/php/conf.d/docker-php-ext-apcu.ini
  - echo "apc.enable_cli=1" | sudo tee --append /usr/local/etc/php/conf.d/docker-php-ext-apcu.ini
  - echo "memory_limit = 512M" | sudo tee --append /usr/local/etc/php/conf.d/docker-php-memory.ini
  - curl -sS https://getcomposer.org/installer | php
  - php composer.phar install
  - *bash_function
