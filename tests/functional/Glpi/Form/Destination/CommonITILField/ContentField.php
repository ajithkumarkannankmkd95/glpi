<?php

/**
 * ---------------------------------------------------------------------
 *
 * GLPI - Gestionnaire Libre de Parc Informatique
 *
 * http://glpi-project.org
 *
 * @copyright 2015-2024 Teclib' and contributors.
 * @copyright 2003-2014 by the INDEPNET Development Team.
 * @licence   https://www.gnu.org/licenses/gpl-3.0.html
 *
 * ---------------------------------------------------------------------
 *
 * LICENSE
 *
 * This file is part of GLPI.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 *
 * ---------------------------------------------------------------------
 */

namespace tests\units\Glpi\Form\Destination\CommonITILField;

use DbTestCase;
use Glpi\Form\AnswersSet;
use Glpi\Form\Tag\AnswerTagProvider;
use Glpi\Form\Tag\Tag;
use Glpi\Tests\FormTesterTrait;

final class ContentField extends DbTestCase
{
    use FormTesterTrait;

    public const FAKE_QUESTION_ID = 5555;

    public function testApplyConfiguratedValueToInputUsingAnswers(): void
    {
        $tag = $this->getDummyTag();
        $config = ['value' => "My custom content using tags: {$tag->html}"];

        $field = new \Glpi\Form\Destination\CommonITILField\ContentField();
        $input = $field->applyConfiguratedValueToInputUsingAnswers(
            config     : $config,
            input      : [],
            answers_set: $this->getFakeAnswers(),
        );

        $this->string($input['content'])->isEqualTo(
            'My custom content using tags: content generated by tag'
        );
    }

    private function getDummyTag(): Tag
    {
        return new Tag(
            label   : 'Dummy label',
            value   : self::FAKE_QUESTION_ID,
            provider: AnswerTagProvider::class,
            color   : AnswerTagProvider::ACCENT_COLOR,
        );
    }

    private function getFakeAnswers(): AnswersSet
    {
        $answers = new AnswersSet();
        $answers->fields['answers'] = [
            [
                'question' => self::FAKE_QUESTION_ID,
                'value' => 'content generated by tag',
            ],
        ];
        return $answers;
    }
}
