{#
 # ---------------------------------------------------------------------
 #
 # GLPI - Gestionnaire Libre de Parc Informatique
 #
 # http://glpi-project.org
 #
 # @copyright 2015-2023 Teclib' and contributors.
 # @copyright 2003-2014 by the INDEPNET Development Team.
 # @licence   https://www.gnu.org/licenses/gpl-3.0.html
 #
 # ---------------------------------------------------------------------
 #
 # LICENSE
 #
 # This file is part of GLPI.
 #
 # This program is free software: you can redistribute it and/or modify
 # it under the terms of the GNU General Public License as published by
 # the Free Software Foundation, either version 3 of the License, or
 # (at your option) any later version.
 #
 # This program is distributed in the hope that it will be useful,
 # but WITHOUT ANY WARRANTY; without even the implied warranty of
 # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 # GNU General Public License for more details.
 #
 # You should have received a copy of the GNU General Public License
 # along with this program.  If not, see <https://www.gnu.org/licenses/>.
 #
 # ---------------------------------------------------------------------
 #}

{% extends "generic_show_form.html.twig" %}
{% import 'components/form/fields_macros.html.twig' as fields %}
{% set params  = params ?? [] %}

{% block more_fields %}
    {% set type_tag = asset_cartridge_tags %}
    {% if item.isField('type_tag') %}
        {{ fields.dropdownArrayField(
            'type_tag',
            item.fields['type_tag'],
            {
              "": constant('Dropdown::EMPTY_VALUE')
                }|merge(type_tag),
            __('Type tag')

        ) }}
    {% endif %}

    {% if item.isField('stock_target') %}
        {{ fields.numberField(
            'stock_target',
            item.fields['stock_target'],
            _x('quantity', 'Stock target'),
            field_options|merge({
                'min': 0,
                'step': 1
            })
        ) }}
    {% endif %}

    {% if item.isField('warn_level') %}
        {% set dd_warn_level %}
            {% do call('Dropdown::showNumber', ['warn_level', {
                 'value': item.fields['warn_level'],
                 'rand': rand,
                 'width': '100%',
                 'min': 0,
                 'max': 100,
                 'step': 1,
                 'toadd': {'-1': __('Never')}
            }|merge(params)]) %}
        {% endset %}
        {{ fields.htmlField(
             'warn_level',
             dd_warn_level,
             __('Remaining level threshold warning')
            ) }}
    {% endif %}

{% endblock %}
