{#
 # ---------------------------------------------------------------------
 #
 # GLPI - Gestionnaire Libre de Parc Informatique
 #
 # http://glpi-project.org
 #
 # @copyright 2015-2023 Teclib' and contributors.
 # @copyright 2003-2014 by the INDEPNET Development Team.
 # @licence   https://www.gnu.org/licenses/gpl-3.0.html
 #
 # ---------------------------------------------------------------------
 #
 # LICENSE
 #
 # This file is part of GLPI.
 #
 # This program is free software: you can redistribute it and/or modify
 # it under the terms of the GNU General Public License as published by
 # the Free Software Foundation, either version 3 of the License, or
 # (at your option) any later version.
 #
 # This program is distributed in the hope that it will be useful,
 # but WITHOUT ANY WARRANTY; without even the implied warranty of
 # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 # GNU General Public License for more details.
 #
 # You should have received a copy of the GNU General Public License
 # along with this program.  If not, see <https://www.gnu.org/licenses/>.
 #
 # ---------------------------------------------------------------------
 #}

{# @var question_types Glpi\Form\QuestionType\QuestionTypeInterface[] #}
{# @var question_type  Glpi\Form\QuestionType\QuestionTypeInterface #}
{# @var question       Glpi\Form\Question|null #}
{# @var question_index string|null #}

{% import 'components/form/fields_macros.html.twig' as fields %}

{# Compute input names base prefix #}
{% set input_prefix =  question_index is not null ? '_questions[' ~ question_index ~ ']' : null %}

{% set base_field_options = {
    'is_horizontal': false,
    'full_width'   : true,
    'no_label'     : true,
} %}

<div
    class="card mb-3 {{ question is not null and question.fields.is_mandatory ? 'mandatory-question' : '' }}"
    data-question-container
    {% if question_index is not null %}
        data-question-index="{{ question_index }}"
    {% endif %}
>
    <div class="card-body">
        {# Display question's title #}
        <div class="d-flex">
            <input
                class="form-control content-editable-h2"
                type="text"
                name="{{ input_prefix is not null ? input_prefix ~ '[name]' : 'name' }}"
                value="{{ question is not null ? question.fields.name : '' }}"
                placeholder="{{ __("New question") }}"
                data-question-title
            />
            <span data-required-mark class="text-danger d-none">*</span>
        </div>

        {# Render the specific question type #}
        <div data-question-type-specific>
            {# Wrapper div needed as we will run some $.find() queries to try to locate inputs inside
            [data-question-type-specific].children() and $.find() do not target top level items.
            A top level input would thus be ignored without this intermdiate wrapper div  #}
            <div>
                {{ question_type.renderAdminstrationTemplate(question, input_prefix)|raw }}
            </div>
        </div>

        {# Display common fields #}
        <div
            class="content-editable-tinymce"
            tabindex="6"
            data-question-description
            {# Mark as secondary if empty #}
            {{ question is null or question.fields.description|length == 0 ? "data-question-extra-details" : "" }}
        >
            {{ fields.textareaField(
                input_prefix is not null ? input_prefix ~ '[description]' : 'description',
                question is not null ? question.fields.description : '',
                __('Description'),
                base_field_options|merge({
                    'placeholder': __('Add a description...'),
                    'enable_richtext': true,
                    'add_body_classes': ['content-editable-tinymce-editor', 'text-muted'],
                    'editor_height': "0",
                    'rows' : 1,
                    'toolbar_location': 'bottom',
                    'init': question is not null ? true : false,
                })
            ) }}
        </div>

        <div
            class="d-flex align-items-center"
            data-question-extra-details
        >
            <select
                name="{{ input_prefix is not null ? input_prefix ~ '[type]' : 'type' }}"
                class="form-select form-select-sm"
                aria-label="{{ __('Question type') }}"
                style="width: auto;"
                data-question-type-selector
            >
                {% for possible_question_type in question_types %}
                    {# TODO: add icon, use select2 ? #}
                    <option
                        value="{{ get_class(possible_question_type) }}"
                        {{ get_class(possible_question_type) == get_class(question_type) ? 'selected' : '' }}
                    >
                        {{ possible_question_type.getName() }}
                    </option>
                {% endfor %}
            </select>

            <label class="form-check form-switch ms-auto mb-0 me-2 cursor-pointer">
                <input type="hidden" value="0" name="{{ input_prefix is not null ? input_prefix ~ '[is_mandatory]' : 'is_mandatory' }}">
                <input
                    class="form-check-input"
                    name="{{ input_prefix is not null ? input_prefix ~ '[is_mandatory]' : 'is_mandatory' }}"
                    type="checkbox"
                    value="1"
                    {{ question is not null and question.fields.is_mandatory ? 'checked' : '' }}
                    data-question-mandatory-toggle
                >
                <span class="form-check-label">{{ __("Mandatory") }}</span>
            </label>

            <button
                class="btn btn-ghost-danger px-2"
                type="button"
                data-delete-question
            >
                <i class="ti ti-trash me-2"></i>
                {{ __("Delete") }}
            </button>
        </div>
    </div>

    {# Common hidden data #}
    <input
        type="hidden"
        name="{{ input_prefix is not null ? input_prefix ~ '[id]' : 'id' }}"
        value="{{ question is not null ? question.fields.id : 0 }}"
    />
</div>
